// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
		// use DMux to direct load signal to the right RAM4K location
		// using first 3 bits of address to locate RAM4K location
		// using the rest to locate register in the RAM4K
		DMux4Way(sel=address[0..1], in=load, a=l0, b=l1, c=l2, d=l3);

		RAM4K(load=l0, in=in, address=address[2..13], out=o0);
		RAM4K(load=l1, in=in, address=address[2..13], out=o1);
		RAM4K(load=l2, in=in, address=address[2..13], out=o2);
		RAM4K(load=l3, in=in, address=address[2..13], out=o3);

		// use Mux to direct the out value fom the right RAM4K chip
		// to the out pin
		Mux4Way16(sel=address[0..1], a=o0, b=o1, c=o2, d=o3, out=out);
}